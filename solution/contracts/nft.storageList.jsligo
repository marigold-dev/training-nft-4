#include "nft.jsligo"
const default_storage =
    {
        administrators: Set.literal(
            list(["tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb" as address])
        ) as set<address>,
        offers: Map.empty as map<[address, nat], offer>,
        ledger: Big_map.empty as MULTIASSET.Ledger.t,
        metadata: Big_map.literal(
            list(
                [
                    ["", bytes `tezos-storage:data`],
                    [
                        "data",
                        bytes
                        `{
      "name":"FA2 NFT Marketplace",
      "description":"Example of FA2 implementation",
      "version":"0.0.1",
      "license":{"name":"MIT"},
      "authors":["Marigold<contact@marigold.dev>"],
      "homepage":"https://marigold.dev",
      "source":{
        "tools":["Ligo"],
        "location":"https://github.com/ligolang/contract-catalogue/tree/main/lib/fa2"},
      "interfaces":["TZIP-012"],
      "errors": [],
      "views": []
      }`
                    ]
                ]
            )
        ) as MULTIASSET.Metadata.t,
        token_metadata: Big_map.empty as MULTIASSET.TokenMetadata.t,
        operators: Big_map.empty as MULTIASSET.Operators.t,
        owner_token_ids: Set.empty as
            set<[MULTIASSET.owner, MULTIASSET.token_id]>,
        token_ids: Set.empty as set<MULTIASSET.token_id>
    };
